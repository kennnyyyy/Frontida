package com.example.frontida;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.app.AppCompatActivity;

import android.content.Intent;
import android.os.Bundle;
import android.util.Log;

import android.widget.Button;
import android.widget.Toast;

import com.facebook.AccessToken;
import com.facebook.AccessTokenTracker;
import com.facebook.CallbackManager;
import com.facebook.FacebookCallback;
import com.facebook.FacebookException;
import com.facebook.FacebookSdk;
import com.facebook.appevents.AppEventsLogger;
import com.facebook.login.LoginResult;
import com.facebook.login.widget.LoginButton;
import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.Task;
import com.google.firebase.auth.AuthCredential;
import com.google.firebase.auth.AuthResult;
import com.google.firebase.auth.FacebookAuthCredential;
import com.google.firebase.auth.FacebookAuthProvider;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseUser;

public class MainActivity extends AppCompatActivity {
    private CallbackManager mCallbackManager;
    private FirebaseAuth mFirebaseAUth;
    private FirebaseAuth.AuthStateListener authStateListener;
    private LoginButton loginButton;
    private static final String TAG = "FacebookAuthentication";
    private AccessTokenTracker accessTokenTracker;


    Button btn;

    public String uname;
    public String dpurl;

    public static final String EXTRA_UNAME ="com.example.frontida.EXTRA_UNAME";
    public static final String EXTRA_DPURL ="com.example.frontida.EXTRA_DPURL";

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);


        btn = findViewById(R.id.joinus);

        mFirebaseAUth = FirebaseAuth.getInstance();
        FacebookSdk.sdkInitialize(getApplicationContext());
        loginButton = findViewById(R.id.login_button);
        loginButton.setReadPermissions("email","public_profile");
        mCallbackManager = CallbackManager.Factory.create();
        loginButton.registerCallback(mCallbackManager, new FacebookCallback<LoginResult>() {
            @Override
            public void onSuccess(LoginResult loginResult) {
                Log.d(TAG, "onSuccess" + loginResult);
                handleFacebookToken(loginResult.getAccessToken());
            }

            @Override
            public void onCancel() {

                Log.d(TAG, "onCancel");

            }

            @Override
            public void onError(FacebookException error) {
                Log.d(TAG, "onError");
            }
        });

        authStateListener = new FirebaseAuth.AuthStateListener() {
            @Override
            public void onAuthStateChanged(@NonNull FirebaseAuth firebaseAuth) {
                FirebaseUser user = firebaseAuth.getCurrentUser();
                if(user!=null){
                    updateUI(user);

                }
                else {
                    updateUI(null);
                }
            }
        };
        accessTokenTracker = new AccessTokenTracker() {
            @Override
            protected void onCurrentAccessTokenChanged(AccessToken oldAccessToken, AccessToken currentAccessToken) {
                if (currentAccessToken == null){
                    mFirebaseAUth.signOut();
                }
            }
        };
    }

    public void handleFacebookToken(AccessToken token) {
        Log.d(TAG, "handleFacebookToken" + token);

        AuthCredential credential = FacebookAuthProvider.getCredential(token.getToken());
        mFirebaseAUth.signInWithCredential(credential).addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {
            @Override
            public void onComplete(@NonNull Task<AuthResult> task) {
             if (task.isSuccessful()){
                 Log.d(TAG, "Sign in with credential: Successful");
                 FirebaseUser user = mFirebaseAUth.getCurrentUser();
                 updateUI(user);
             }
             else {
                 Log.d(TAG, "Sign in with credential: failed", task.getException());
                 Toast.makeText(MainActivity.this, "Authentication Failed", Toast.LENGTH_SHORT).show();
                 updateUI(null);
             }

            }
        });


    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
        mCallbackManager.onActivityResult(requestCode, resultCode, data);
        super.onActivityResult(requestCode, resultCode, data);
    }


    private  void updateUI(FirebaseUser user) {
        if(user != null){

            uname = user.getDisplayName();

            if(user.getPhotoUrl() != null){
               dpurl = user.getPhotoUrl().toString();
                dpurl = dpurl + "?type=large";


                Intent dsp = new Intent(MainActivity.this,Dashboard.class);
                dsp.putExtra(EXTRA_UNAME,uname);
                dsp.putExtra(EXTRA_DPURL,dpurl);
                startActivity(dsp);


            }


        }
        else {

        }
    }



    @Override
    protected void onStart() {
        super.onStart();
        mFirebaseAUth.addAuthStateListener(authStateListener);
    }

    @Override
    protected void onStop() {
        super.onStop();
        if(authStateListener!=null){
            mFirebaseAUth.removeAuthStateListener(authStateListener);
        }
    }



}
